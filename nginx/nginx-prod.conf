worker_processes 1;

events {
    worker_connections 1024;
}

http {
    # include       mime.types;
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    sendfile on;
    keepalive_timeout 65;

    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    # Resolver pour Docker
    resolver 127.0.0.11 valid=30s;

    # Upstream pour PHP-FPM
    upstream php_backend {
        server api:9000 max_fails=2 fail_timeout=10s;
        keepalive 2;
    }

    # Par défaut, si aucun domaine ne correspond, on renvoie une 404
    server {
        listen 80 default_server;
        server_name _;

        return 404;
    }

    # Serveur par défaut pour les requêtes HTTPS qui ne correspondent à aucun domaine configuré
    server {
        listen 443 ssl default_server;
        server_name _;

        ssl_certificate /etc/nginx/ssl/fullchain.pem;
        ssl_certificate_key /etc/nginx/ssl/privkey.pem;

        return 404;
    }

    server {
        listen 80;
        server_name bentoweb.fr;
        return 301 https://$server_name$request_uri;
    }

    server {
        listen 443 ssl;
        server_name bentoweb.fr;

        ssl_certificate /etc/nginx/ssl/fullchain.pem;
        ssl_certificate_key /etc/nginx/ssl/privkey.pem;

        root /var/www/front;
        index index.html index.htm;

        location / {
            # if ($http_user_agent ~* "(googlebot|bingbot|yandex|baiduspider|duckduckbot|slurp|msnbot)") {
            #     root /var/www/api/public;
            #     index index.php;
            #     try_files $uri /index.php$is_args$args;
            #     try_files $uri =404;
            #     fastcgi_pass php_backend;
            #     fastcgi_split_path_info ^(.+\.php)(/.+)$;
            #     include fastcgi_params;
            #     fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
            #     fastcgi_param DOCUMENT_ROOT $realpath_root;
            #     fastcgi_connect_timeout 60s;
            #     fastcgi_send_timeout 60s;
            #     fastcgi_read_timeout 60s;
            #     internal;
            # }
            try_files $uri $uri/ /index.html =404;
            # try_files $uri /index.html$is_args$args;
        }

        error_page 404 /404.html;
        location = /404.html {
            internal;
        }

    }

    server {
        listen 80;
        server_name api.bentoweb.fr;
        return 301 https://$server_name$request_uri;
    }

    server {
        listen 443 ssl;
        server_name api.bentoweb.fr;

        ssl_certificate /etc/nginx/ssl/fullchain.pem;
        ssl_certificate_key /etc/nginx/ssl/privkey.pem;

        root /var/www/api/public;
        index index.php index.html index.htm;

        # Servir les assets statiques (CSS, JS, images, etc.)
        location ~* \.(css|js|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            try_files $uri =404;
        }

        # Servir spécifiquement les bundles (EasyAdmin, etc.)
        location /bundles/ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            try_files $uri =404;
        }

        # Accès à phpMyAdmin
        location /phpmyadmin/ {
            proxy_pass http://bentoweb_phpmyadmin:80/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;
            
            # Réécriture des redirections pour phpMyAdmin
            proxy_redirect ~^/(.*)$ /phpmyadmin/$1;
            
            # Gestion des assets
            sub_filter_once off;
            sub_filter 'src="/' 'src="/phpmyadmin/';
            sub_filter 'href="/' 'href="/phpmyadmin/';
            sub_filter 'action="/' 'action="/phpmyadmin/';
        }

        location / {

            add_header 'Access-Control-Allow-Origin' 'https://bentoweb.fr' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
            add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization' always;

            if ($request_method = 'OPTIONS') {
                return 204;
            }

            # if ($http_user_agent ~* "(googlebot|bingbot|yandex|baiduspider|duckduckbot|slurp|msnbot)") {
            #     return 302 /seo;
            # }

            try_files $uri /index.php$is_args$args;
        }

        location ~ ^/index\.php(/|$) {
            try_files $uri =404;
            fastcgi_pass php_backend;
            fastcgi_split_path_info ^(.+\.php)(/.+)$;
            include fastcgi_params;
            fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
            fastcgi_param DOCUMENT_ROOT $realpath_root;
            fastcgi_connect_timeout 60s;
            fastcgi_send_timeout 60s;
            fastcgi_read_timeout 60s;
            internal;
        }

        location ~ \.php$ {
            return 404;
        }
    }

}
